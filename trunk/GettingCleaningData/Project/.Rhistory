library(dplyr)
x.test <- read.csv("UCI HAR Dataset/test/X_test.txt",
sep="",
header=FALSE)
y.test <- read.csv("UCI HAR Dataset/test/y_test.txt",
sep="",
header=FALSE)
subject.test <- read.csv("UCI HAR Dataset/test/subject_test.txt",
sep="", header=FALSE)
test <- data.frame(subject.test, y.test, x.test)
x.train <- read.csv("UCI HAR Dataset/train/X_train.txt",
sep="",
header=FALSE)
y.train <- read.csv("UCI HAR Dataset/train/y_train.txt", sep="",
header=FALSE)
subject.train <- read.csv("UCI HAR Dataset/train/subject_train.txt",
sep="",
header=FALSE)
train <- data.frame(subject.train, y.train, x.train)
run.data <- rbind(train, test)
features <- read.csv("UCI HAR Dataset/features.txt", sep="", header=FALSE)
column.names <- as.vector(features[, 2])
colnames(run.data) <- c("subject_id", "activity_labels", column.names)
run.data <- select(run.data, contains("subject"), contains("label"),
contains("mean"), contains("std"), -contains("freq"),
-contains("angle"))
View(run.data)
View(features)
features <- read.csv("UCI HAR Dataset/features.txt", sep="", header=FALSE)
column.names <- as.vector(features[, 2])
duplicated(column.names, incomparables = FALSE, ...)
duplicated(column.names, incomparables = FALSE)
run.data <- select(run.data, contains("subject"), contains("label"),
contains("mean"), contains("std"), -contains("freq"),
-contains("angle"))
activity.labels <- read.csv("UCI HAR Dataset/activity_labels.txt",
sep="", header=FALSE)
run.data$activity_labels <- as.character(activity.labels[
match(run.data$activity_labels, activity.labels$V1), 'V2'])
setnames(run.data, colnames(run.data), gsub("\\(\\)", "", colnames(run.data)))
setnames(run.data, colnames(run.data), gsub("-", "_", colnames(run.data)))
setnames(run.data, colnames(run.data), gsub("BodyBody", "Body", colnames(run.data)))
?setNames
setNames(run.data, colnames(run.data), gsub("\\(\\)", "", colnames(run.data)))
?setNames
activity.labels <- read.csv("UCI HAR Dataset/activity_labels.txt",
sep="", header=FALSE)
run.data$activity_labels <- as.character(activity.labels[
match(run.data$activity_labels, activity.labels$V1), 'V2'])
setNames(run.data, colnames(run.data), gsub("\\(\\)", "", colnames(run.data)))
setNames(run.data, colnames(run.data), gsub("-", "_", colnames(run.data)))
setNames(run.data, colnames(run.data), gsub("BodyBody", "Body", colnames(run.data)))
features <- read.table("features.txt", header=FALSE)
features.colnames <- features$V2
xtrain <- read.table("train/X_train.txt", header=FALSE, col.names=features.colnames)
xtest <- read.table("test/X_test.txt", header=FALSE, col.names=features.colnames)
features <- rbind(xtrain, xtest)
setwd("UCI HAR Dataset")
features <- read.table("features.txt", header=FALSE)
features.colnames <- features$V2
xtrain <- read.table("train/X_train.txt", header=FALSE, col.names=features.colnames)
xtest <- read.table("test/X_test.txt", header=FALSE, col.names=features.colnames)
features <- rbind(xtrain, xtest)
features <- features[, grep(".*\\.(mean|std)\\.\\..*", names(features), value=T)]
subjects.colnames <- c("subject")
subjecttrain <- read.table("train/subject_train.txt", header=FALSE, col.names=subjects.colnames)
subjecttest <- read.table("test/subject_test.txt", header=FALSE, col.names=subjects.colnames)
subjects <- rbind(subjecttrain, subjecttest)
activities.colnames <- c("activity")
activitytrain <- read.table("train/y_train.txt", header=FALSE, col.names=activities.colnames)
activitytest <- read.table("test/y_test.txt", header=FALSE, col.names=activities.colnames)
activities <- rbind(activitytrain, activitytest)
activity.labels <- read.table("activity_labels.txt", header=FALSE, col.names=c("activity", "activityName"))
activities <- merge(activities, activity.labels, by="activity", sort=F)
subject.activities <- cbind(subjects, data.frame(activity = activities$activityName))
df <- cbind(features, subject.activities)
colnames(df) <- tolower(str_replace_all(colnames(df), "([A-Z]{1})", ".\\1"))
colnames(df) <- str_replace_all(colnames(df), "[\\.]+", ".")
colnames(df) <- str_replace_all(colnames(df), "[\\.]+$", "") # extra dot at the end of the string
tidy <- df[0,]
tidy[1,] <- rep(NA, 68)
melted <- melt(df, id=c("subject","activity"))
?melt
??melt
install.packages("reshape2")
library(reshape2)
df <- cbind(features, subject.activities)
###############################################
#
# 4. Appropriately labels the data set with descriptive variable names.
#
###############################################
colnames(df) <- tolower(str_replace_all(colnames(df), "([A-Z]{1})", ".\\1"))
colnames(df) <- str_replace_all(colnames(df), "[\\.]+", ".")
colnames(df) <- str_replace_all(colnames(df), "[\\.]+$", "") # extra dot at the end of the string
tidy <- df[0,]
tidy[1,] <- rep(NA, 68)
melted <- melt(df, id=c("subject","activity"))
# 5 Creates a second, independent tidy data set with the average of each variable for each activity and each subject.
# This is not that much optimized. Still, it works.
for(subj in unique(melted$subject)){
means <- c()
for(acti in unique(melted[melted$subject == subj,]$activity)){
for(vari in unique(melted[melted$subject == subj,]$variable)){
m <- mean(melted[melted$subject == subj & melted$activity == acti & melted$variable == vari,]$value)
means <- append(means, as.numeric(m))
}
means <- append(means, subj)
means <- append(means, acti)
tidy <- rbind(tidy, means)
}
}
# remove the first N/A row
tidy <- na.omit(tidy)
# re-orderding of columns: first subject, then activity, then the values
tidy <- tidy[,c(67,68, 1:66)]
setwd(working.directory)
write.table(tidy, file="tidymeans.txt", quote=FALSE)
View(tidy)
str(tidy)
View(tidy)
x=colnames(tidy)
write.table(x, file="tidycols.txt", quote=FALSE)
